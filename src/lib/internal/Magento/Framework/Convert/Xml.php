<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @copyright   Copyright (c) 2014 X.commerce, Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
namespace Magento\Framework\Convert;

/**
 * Convert xml data (SimpleXMLElement object) to array
 */
class Xml
{
    /**
     * Transform \SimpleXMLElement to associative array
     * \SimpleXMLElement must be conform structure, generated by assocToXml()
     *
     * @param \SimpleXMLElement $xml
     * @return array
     */
    public function xmlToAssoc(\SimpleXMLElement $xml)
    {
        $array = array();
        foreach ($xml as $key => $value) {
            if (isset($value->{$key})) {
                $i = 0;
                foreach ($value->{$key} as $v) {
                    $array[$key][$i++] = (string)$v;
                }
            } else {
                // try to transform it into string value, trimming spaces between elements
                $array[$key] = trim((string)$value);
                if (empty($array[$key]) && !empty($value)) {
                    $array[$key] = $this->xmlToAssoc($value);
                } else {
                    // untrim strings values
                    $array[$key] = (string)$value;
                }
            }
        }
        return $array;
    }
}
