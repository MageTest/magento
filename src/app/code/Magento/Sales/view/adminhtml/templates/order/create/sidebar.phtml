<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @copyright   Copyright (c) 2014 X.commerce, Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/** @var $this \Magento\Sales\Block\Adminhtml\Order\Create\Sidebar */
?>
<div class="customer-current-activity-inner">
    <h4><?php echo __('Customer\'s Activities') ?></h4>
    <div class="create-order-sidebar-container">
    <?php echo $this->getChildHtml('top_button'); ?>
    <?php foreach ($this->getLayout()->getChildBlocks($this->getNameInLayout()) as $_alias => $_child): ?>
        <?php if ($_alias != 'top_button' && $_alias != 'bottom_button'): ?>
            <?php if($this->canDisplay($_child)): ?>
                <div id="order-sidebar_<?php echo $_alias ?>">
                    <?php echo $this->getChildHtml($_alias) ?>
                </div>
            <?php endif; ?>
        <?php endif; ?>
    <?php endforeach; ?>
    <?php echo $this->getChildHtml('bottom_button'); ?>
    </div>
</div>
<script>
require([
    "prototype",
    "Magento_Catalog/catalog/product/composite/configure"
], function(){

    function addSidebarCompositeListType() {
        productConfigure.addListType('sidebar', {
            urlFetch: '<?php echo $this->getUrl('sales/order_create/configureProductToAdd') ?>',
            urlConfirm: '<?php echo $this->getUrl('sales/order_create/addConfigured') ?>'
        });
        productConfigure.addListType('sidebar_wishlist', {
            urlFetch: '<?php echo $this->getUrl('customer/wishlist_product_composite_wishlist/configure') ?>',
            urlConfirm: '<?php echo $this->getUrl('sales/order_create/addConfigured') ?>'
        });
    }

    if (typeof(sidebarListTypeWorkedOn) == 'undefined') {
        sidebarListTypeWorkedOn = false;
    }
    if (!sidebarListTypeWorkedOn) {
        if (typeof(productConfigure) == 'undefined') {
            Event.observe(window, 'load',  function(){
                setTimeout(addSidebarCompositeListType, 10);
            })
        } else {
            addSidebarCompositeListType();
        }
        sidebarListTypeWorkedOn = true;
    }

    window.addSidebarCompositeListType = addSidebarCompositeListType;
});
</script>
