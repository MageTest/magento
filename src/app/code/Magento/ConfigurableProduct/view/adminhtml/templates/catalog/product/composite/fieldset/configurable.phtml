<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @copyright   Copyright (c) 2014 X.commerce, Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
 ?>

<?php /* @var $this \Magento\ConfigurableProduct\Block\Adminhtml\Product\Composite\Fieldset\Configurable */ ?>
<?php $_product = $this->getProduct(); ?>
<?php $_attributes = $this->decorateArray($this->getAllowAttributes()); ?>
<?php $_skipSaleableCheck = $this->helper('Magento\Catalog\Helper\Product')->getSkipSaleableCheck(); ?>
<?php if (($_product->isSaleable() || $_skipSaleableCheck) && count($_attributes)):?>
<fieldset id="catalog_product_composite_configure_fields_configurable" class="fieldset">
    <legend class="legend"><span><?php echo __('Associated Products') ?></span></legend>
    <div class="product-options">
        <div class="field required">
        <?php foreach($_attributes as $_attribute): ?>
            <label class="label"><?php echo $_attribute->getLabel() ?></label>
            <div class="control<?php if ($_attribute->getDecoratedIsLast()):?> last<?php endif; ?>">
                <select name="super_attribute[<?php echo $_attribute->getAttributeId() ?>]" id="attribute<?php echo $_attribute->getAttributeId() ?>" class="required-entry super-attribute-select">
                    <option><?php echo __('Choose an Option...') ?></option>
                </select>
            </div>
        <?php endforeach; ?>
        </div>
    </div>
</fieldset>
<script type="text/javascript">
require([
    "Magento_ConfigurableProduct/js/configurable",
    "Magento_Catalog/catalog/product/composite/configure"
], function(){

    var config = <?php echo $this->getJsonConfig() ?>;
    if (window.productConfigure) {
        config.containerId = window.productConfigure.blockFormFields.id;
        if (window.productConfigure.restorePhase) {
            config.inputsInitialized = true;
        }
    }

    ProductConfigure.spConfig = new Product.Config(config);

});
</script>
<?php endif;?>
