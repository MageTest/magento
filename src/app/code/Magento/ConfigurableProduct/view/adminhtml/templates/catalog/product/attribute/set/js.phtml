<?php
/**
 *
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @copyright   Copyright (c) 2014 X.commerce, Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<script type="text/javascript">
require(['jquery'], function(){
ConfigurableNodeExists = function(currentNode) {
    for (var i in currentNode.childNodes ) {
        if (currentNode.childNodes[i].id) {
            child = editSet.currentNode.childNodes[i];
            if (child.attributes.is_configurable) {
                return true;
            }
        }
    }
    return false;
};

editSet.submit = editSet.submit.wrap(function(original) {
    if (editSet.currentNode){
        if (ConfigurableNodeExists(editSet.currentNode)) {
            alert('<?php echo $this->escapeJsQuote(__('This group contains attributes used in configurable products. Please move these attributes to another group and try again.')) ?>');
            return;
        }
    }
    return original();
});

editSet.rightBeforeAppend = editSet.rightBeforeAppend.wrap(function(original, tree, nodeThis, node, newParent) {
    if (node.attributes.is_configurable == 1) {
        alert('<?php echo $this->escapeJsQuote(__('This attribute is used in configurable products. You cannot remove it from the attribute set.')) ?>');
        return false;
    }
    return original(tree, nodeThis, node, newParent);
});

editSet.rightBeforeInsert = editSet.rightBeforeInsert.wrap(function(original, tree, nodeThis, node, newParent) {
    if (node.attributes.is_configurable == 1) {
        alert('<?php echo $this->escapeJsQuote(__('This attribute is used in configurable products. You cannot remove it from the attribute set.')) ?>');
        return false;
    }
    return original(tree, nodeThis, node, newParent);
});

});
</script>
