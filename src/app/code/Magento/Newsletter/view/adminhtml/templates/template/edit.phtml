<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @copyright   Copyright (c) 2014 X.commerce, Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
/* @var $this \Magento\Newsletter\Block\Adminhtml\Template\Edit */
?>
<form action="<?php echo $this->getSaveUrl() ?>" method="post" id="newsletter_template_edit_form">
    <?php echo $this->getBlockHtml('formkey')?>
    <div class="no-display">
        <input type="hidden" id="change_flag_element" name="_change_type_flag" value="" />
        <input type="hidden" id="save_as_flag" name="_save_as_flag" value="<?php echo $this->getSaveAsFlag() ?>" />
    </div>
    <?php echo $this->getForm() ?>
</form>
<form action="<?php echo $this->getPreviewUrl() ?>" method="post" id="newsletter_template_preview_form" target="_blank">
    <?php echo $this->getBlockHtml('formkey')?>
    <div class="no-display">
        <input type="hidden" id="preview_type" name="type" value="<?php echo $this->isTextType()?1:2 ?>" />
        <input type="hidden" id="preview_text" name="text" value="" />
        <input type="hidden" id="preview_styles" name="styles" value="" />
        <input type="hidden" id="preview_id" name="id" value="" />
    </div>
</form>
<script type="text/javascript">
require(['jquery', 'mage/mage', 'prototype'], function(jQuery){

//<![CDATA[
    jQuery('#newsletter_template_edit_form').mage('form').mage('validation');
    jQuery('#newsletter_template_preview_form').mage('form').mage('validation');
    templateControl = {

        unconvertedText: '',
        typeChange: false,
        templateName: false,
        id: 'text',

        events: {
            'click [data-role=template-save]' : 'save',
            'click [data-role=template-save-as]': 'saveAs',
            'click [data-role=template-preview]' : 'preview',
            'click [data-role=template-unstrip]' : 'unStripTags',
            'click [data-role=template-strip]' : 'stripTags',
            'click [data-role=template-delete]': 'deleteTemplate'
        },

        init: function () {
            if ($('convert_button_back')) {
                $('convert_button_back').hide();
            }

            this.bindEvents();
        },

        bindEvents: function(){
            var events = this.events,
                eventName,
                selector,
                callback,
                key;

            for( key in events ){
                callback    = this[events[key]];
                key         = key.split(' ');

                eventName   = key[0];
                selector    = key.slice(1).join(' ');
                
                jQuery(selector).on(eventName, jQuery.proxy(callback, this) );
            }
        },

        stripTags: function () {
            if(!window.confirm("<?php echo __('Are you sure that you want to strip all tags?') ?>")) {
                return false;
            }
            if(this.isEditor()) {
                this.getEditor().turnOff();
                this.getEditor().getToggleButton().hide();
            }
            this.unconvertedText = $(this.id).value;
            $('convert_button').hide();
            $('convert_button_back').show();
            $(this.id).value =  $(this.id).value.stripScripts().stripTags();
            $('field_template_styles').hide();
            this.typeChange = true;
            return false;
        },

        unStripTags: function () {
            $('convert_button').show();
            $('convert_button_back').hide();
            $(this.id).value =  this.unconvertedText;
            if(this.isEditor()) {
                this.getEditor().turnOn();
                this.getEditor().getToggleButton().show();
            }
            this.typeChange = false;
            $('field_template_styles').show();
            return false;
        },

        save: function() {
            if (this.typeChange) {
                $('change_flag_element').value = '1';
            }
            if(this.isEditor()) {
                tinyMCE.triggerSave();
            }
            // Temporary solution will be replaced after refactoring of newsletter functionality
            jQuery('#newsletter_template_edit_form').triggerHandler('save');
            return false;
        },

        saveAs: function() {
            if (this.typeChange) {
                $('change_flag_element').value = '1';
            }

            if($F('code').blank() || $F('code')==templateControl.templateName) {
               value = prompt('<?php echo __('Please enter new template name.') ?>', templateControl.templateName + '<?php echo __(' Copy') ?>');
               if(!value) {
                   if(value !== null) {
                       $('code').value = '';
                       // Temporary solution will be replaced after refactoring of newsletter functionality
                       jQuery('#newsletter_template_edit_form').triggerHandler('save');
                   }
                   return false;
               } else {
                   $('code').value = value;
               }
            }

            $('save_as_flag').value = '1';

            if(this.isEditor()) {
                tinyMCE.triggerSave();
            }
            // Temporary solution will be replaced after refactoring of newsletter functionality
            jQuery('#newsletter_template_edit_form').triggerHandler('save');
            return false;
        },

        preview: function() {
            if (this.typeChange) {
                $('preview_type').value = 1;
            } else {
                $('preview_type').value = 2;
            }
            if (this.isEditor() && tinyMCE.get(this.id)) {
                tinyMCE.triggerSave();
                $('preview_text').value = tinyMCE.get(this.id).getContent();
                tinyMCE.triggerSave();
            } else {
                $('preview_text').value = $(this.id).value;
            }
            if ($('template_styles') != undefined) {
                $('preview_styles').value = $('template_styles').value;
            }
            if ($('id') != undefined) {
                $('preview_id').value = $('id').value;
            }
            // Temporary solution will be replaced after refactoring of newsletter functionality
            jQuery('#newsletter_template_preview_form').triggerHandler('save');
            return false;
        },

        deleteTemplate: function() {
            if(window.confirm("<?php echo __('Are you sure that you want to delete this template?') ?>")) {
                   window.location.href = '<?php echo $this->getDeleteUrl() ?>';
            }
        },

        isEditor: function() {
            return (typeof tinyMceEditors != 'undefined' && tinyMceEditors.get(this.id) != undefined)
        },

        getEditor: function() {
            return tinyMceEditors.get(this.id);
        }
    };

    templateControl.init();
    templateControl.templateName = "<?php echo $this->getJsTemplateName() ?>";
//]]>

});
</script>
