<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @copyright   Copyright (c) 2014 X.commerce, Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<script type="text/javascript">
require([
    "jquery",
    "mage/adminhtml/form"
], function(jQuery){

    var updater = new RegionUpdater('tax_country_id', 'tax_region', 'tax_region_id', <?php echo $this->helper('Magento\Directory\Helper\Data')->getRegionJson() ?>, 'disable');
    (function ($) {
        $(document).ready(function () {
            'use strict';

            var zipIsRange = $('#zip_is_range')
                .on('change.zipRange', function(){
                    var elem = $(this),
                        zipIsRangeChecked = elem.is(':checked'),
                        zipFrom = $('.field-zip_from'),
                        zipTo = $('.field-zip_to'),
                        zipCode = $('.field-tax_postcode'),
                        setState = function(element, visibility) {
                            var input = element.find(':input');
                            if (visibility) {
                                element
                                    .addClass('required')
                                    .removeClass('hidden');
                                input.addClass('required-entry');
                            } else {
                                element
                                    .removeClass('required')
                                    .addClass('hidden');
                                input.removeClass('required-entry');
                            }
                        };
                    elem.val(zipIsRangeChecked ? 1 : 0);
                    setState(zipCode, !zipIsRangeChecked);
                    setState(zipFrom, zipIsRangeChecked);
                    setState(zipTo, zipIsRangeChecked);
                });
            if (zipIsRange.val()) {
                zipIsRange.attr({checked: 'checked'})
            }
            zipIsRange.trigger('change');
        });
    })(jQuery);

    window.updater = updater;
});
</script>
